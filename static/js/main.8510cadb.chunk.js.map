{"version":3,"sources":["components/Row.jsx","components/Col.jsx","components/Table.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["row","props","onClick","forEach","call","document","getElementsByTagName","item","addEventListener","style","backgroundColor","Color","Col","id","console","log","arrayRows","i","RowNum","push","createRows","Table","className","arrayCols","ColNum","createCol","App","state","Row","updateRowNum","bind","updateColNum","ColorPick","this","setState","selectedColor","getElementById","value","alert","selected","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gQAEe,SAASA,EAAIC,GAWxB,OAGQ,oBAAIC,YAXR,GAAGC,QAAQC,KAAKC,SAASC,qBAAqB,OAAO,SAASC,GAC1DA,EAAKC,iBAAiB,SAAS,WAC3BD,EAAKE,MAAMC,gBAAkBT,EAAMU,SACpC,QCFA,SAASC,EAAIX,GAgBxB,OAEI,uBAAOY,GAAK,QAAZ,SACA,6BAlBJ,WAGAC,QAAQC,IAAId,EAAMU,OAGV,IAFJ,IAAIK,EAAY,GAEJC,EAAI,EAAEA,EAAEhB,EAAMiB,OAAOD,IAEzBD,EAAUG,KAAK,cAAC,EAAD,KAEvB,OAAOH,EASFI,OCuBEC,MA9Cf,SAAepB,GAiCX,OACI,sBAAKqB,UAAY,YAAjB,UAEA,uBAAOT,GAAK,QAAZ,SACE,6BAnCN,WAEI,IAAIG,EAAY,GAChBF,QAAQC,IAAId,EAAMiB,QACd,IAAI,IAAID,EAAI,EAAEA,EAAEhB,EAAMiB,OAAOD,IAEzBD,EAAUG,KAAK,cAAC,EAAD,CACXR,MAASV,EAAMU,SAG3B,OAAOK,EA0BFI,OAxBT,WAGI,IAAIG,EAAY,GAChBT,QAAQC,IAAId,EAAMuB,QAClBV,QAAQC,IAAId,EAAMU,OACd,IAAI,IAAIM,EAAI,EAAEA,EAAEhB,EAAMuB,OAAOP,IAEzBM,EAAUJ,KAAK,cAACP,EAAD,CACfM,OAAUjB,EAAMiB,OAChBP,MAASV,EAAMU,SAInB,OAAOY,EAaNE,OC8BEC,E,kDApEb,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IACD0B,MAAQ,CACXhB,MAAO,MACPiB,IAAK,GACLhB,IAAK,GACLM,OAAQ,EACRM,OAAQ,GAGV,EAAKK,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBAZA,E,2DAiBnBG,KAAKC,SAAS,CAAChB,OAAQe,KAAKN,MAAMT,OAAO,M,qCAOzCe,KAAKC,SAAS,CAACV,OAAQS,KAAKN,MAAMH,OAAO,M,kCAMzC,IACIW,EADI9B,SAAS+B,eAAe,MACVC,MACtBJ,KAAKC,SAAS,CAACvB,MAAOwB,IACtBG,MAAM,2BAA6BH,K,+BAOnC,OACE,sBAAKb,UAAU,MAAf,UACI,6CACA,wBAAQpB,QAAW+B,KAAKJ,aAAxB,qCACF,wBAAQ3B,QAAW+B,KAAKF,aAAxB,wCACA,wBAAQ7B,QAAW+B,KAAKD,UAAxB,uDACA,yBAAQnB,GAAG,KAAX,UACJ,wBAAQwB,MAAM,MAAME,SAAS,WAA7B,iBACA,wBAAQF,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,sBAEK,cAAC,EAAD,CACAT,IAAOK,KAAKN,MAAMC,IAClBjB,MAASsB,KAAKN,MAAMhB,MACpBC,IAAOqB,KAAKN,MAAMC,IAClBV,OAAUe,KAAKN,MAAMT,OACrBM,OAAUS,KAAKN,MAAMH,gB,GA3DVgB,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhD,SAAS+B,eAAe,SAM1BM,M","file":"static/js/main.8510cadb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function row(props) {\r\n    function changeColor()\r\n    { \r\n        [].forEach.call(document.getElementsByTagName('td'), function(item) { \r\n            item.addEventListener('click', function() {\r\n                item.style.backgroundColor = props.Color;\r\n            }, false); \r\n         });\r\n     \r\n    }\r\n   \r\n    return (\r\n        \r\n            \r\n            <td onClick ={changeColor()}></td>\r\n       \r\n    )\r\n}\r\n","import React from 'react'\r\nimport Row from './Row'\r\n\r\n\r\n\r\n\r\nexport default function Col(props) {\r\n    function createRows()\r\n    {\r\n        \r\n    console.log(props.Color)\r\n        let arrayRows = []\r\n        \r\n            for(let i = 0;i<props.RowNum;i++)\r\n            {\r\n                arrayRows.push(<Row/>)\r\n            }\r\n        return arrayRows\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n        \r\n        <table id = \"table\">\r\n        <tr>\r\n            {createRows()}\r\n        </tr>\r\n      </table>\r\n       \r\n    )\r\n}\r\n","import React from 'react'\r\nimport Row from './Row'\r\nimport Col from './Col'\r\nfunction Table(props) {\r\n    \r\n    function createRows()\r\n    {\r\n        let arrayRows = []\r\n        console.log(props.RowNum)\r\n            for(let i = 0;i<props.RowNum;i++)\r\n            {\r\n                arrayRows.push(<Row\r\n                    Color = {props.Color}\r\n                />)\r\n            }\r\n        return arrayRows\r\n    }\r\n    function createCol()\r\n    {\r\n        \r\n        let arrayCols = []\r\n        console.log(props.ColNum)\r\n        console.log(props.Color)\r\n            for(let i = 0;i<props.ColNum;i++)\r\n            {\r\n                arrayCols.push(<Col \r\n                RowNum = {props.RowNum}\r\n                Color = {props.Color}\r\n                \r\n                />)\r\n            }\r\n            return arrayCols\r\n        \r\n    }\r\n\r\n    \r\n    return (\r\n        <div className = \"table-div\">\r\n            \r\n        <table id = \"table\">\r\n          <tr>\r\n            {createRows()}\r\n          </tr>\r\n        </table>\r\n            {createCol()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\nimport '../App.css';\nimport Table from './Table'\n\nclass App extends React.Component{\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      Color: \"red\",\n      Row: [],\n      Col: [],\n      RowNum: 1,\n      ColNum: 0\n    };\n\n    this.updateRowNum = this.updateRowNum.bind(this)\n    this.updateColNum = this.updateColNum.bind(this)\n    this.ColorPick = this.ColorPick.bind(this)\n  }\n\n updateRowNum()\n {\n  this.setState({RowNum: this.state.RowNum+1})\n  \n  \n }\n\n updateColNum()\n {\n  this.setState({ColNum: this.state.ColNum+1})\n  \n }\n\n ColorPick()\n {\n  let e = document.getElementById(\"cp\")\n  let selectedColor = e.value\n  this.setState({Color: selectedColor})\n  alert(\"Click Color updated to: \" + selectedColor)\n }\n\n\n  render()\n  {\n    \n  return (\n    <div className=\"App\">\n        <h1>Table Maker</h1>\n        <button onClick = {this.updateRowNum}>Click Here to Add a Row</button> \n      <button onClick = {this.updateColNum}>Click Here to Add a column</button> \n      <button onClick = {this.ColorPick}>Click here to set the color from the menu</button> \n      <select id=\"cp\">\n  <option value=\"red\" selected=\"selected\" >Red</option>\n  <option value=\"blue\">Blue</option>\n  <option value=\"yellow\">Yellow</option>\n  <option value=\"Green\">Green</option>\n</select>\n       <Table\n       Row = {this.state.Row}\n       Color = {this.state.Color}\n       Col = {this.state.Row}\n       RowNum = {this.state.RowNum}\n       ColNum = {this.state.ColNum}\n        \n       />\n      \n\n    </div>\n  );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}